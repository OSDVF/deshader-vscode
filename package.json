{
  "$schema": "https://json.schemastore.org/package",
  "name": "deshader",
  "displayName": "Deshader",
  "description": "Debug GLSL shaders. Write GLSL code with smart features.",
  "icon": "deshader.png",
  "publisher": "osdvf",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.91.1",
    "bun": "^1.0.0"
  },
  "categories": [
    "Debuggers",
    "Programming Languages"
  ],
  "keywords": [
    "glsl",
    "shader",
    "step",
    "debug",
    "debugger",
    "language server",
    "completion",
    "documentation"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/OSDVF/deshader-vscode"
  },
  "bugs": {
    "url": "https://github.com/OSDVF/deshader-vscode/issues"
  },
  "preview": true,
  "activationEvents": [
    "onDebug",
    "onFileSystem:deshader",
    "onFileSystem:deshaders",
    "onFileSystem:deshaderws",
    "onFileSystem:deshaderwss",
    "onSearch:deshader",
    "workspaceContains:**/.deshader",
    "onResolveRemoteAuthority:deshader",
    "onResolveRemoteAuthority:deshaders",
    "onResolveRemoteAuthority:deshaderws",
    "onResolveRemoteAuthority:deshaderwss"
  ],
  "browser": "./dist/extension.js",
  "main": "./dist/extension.js",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    },
    "virtualWorkspaces": {
      "supported": "limited",
      "description": "Debugger can be attached to a program running on remote machine if it has Deshader injected. On local machines the extension can inject Deshader to any program."
    }
  },
  "contributes": {
    "breakpoints": [
      {
        "language": "glsl"
      }
    ],
    "debuggers": [
      {
        "type": "deshader",
        "label": "Deshader",
        "languages": [
          "glsl"
        ],
        "configurationAttributes": {
          "launch": {
            "description": "Launch a program and inject Deshader Library into it",
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to the executable",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "args": {
                "type": "array",
                "description": "Command line arguments passed to the program",
                "default": []
              },
              "cwd": {
                "type": "string",
                "description": "Absolute path to the working directory of the program or empty to use the current workspace",
                "default": "${workspaceFolder}"
              },
              "env": {
                "type": "object",
                "description": "Environment variables passed to the program",
                "default": {}
              },
              "console": {
                "type": "string",
                "enum": [
                  "debugConsole",
                  "integratedTerminal",
                  "externalTerminal"
                ],
                "enumDescriptions": [
                  "Use the built-in debug console",
                  "Use the built-in integrated terminal (default)",
                  "Use the external terminal (not available in integrated Deshader Editor)"
                ],
                "default": "integratedTerminal",
                "description": "Console used for communication between user and the debugged program"
              },
              "consoleHost": {
                "type": "string",
                "description": "Host for the external terminal",
                "default": "xterm"
              },
              "connection": {
                "type": "string",
                "description": "URL of the Deshader Library commands server (wil be set automatically)",
                "default": "ws://localhost:8082"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after first frame",
                "default": false
              },
              "showDebugOutput": {
                "type": "boolean",
                "description": "Show debug output from the command listener",
                "default": false
              }
            }
          },
          "attach": {
            "description": "Attach to a running program with Deshader already injected",
            "required": [],
            "properties": {
              "connection": {
                "type": "string",
                "description": "URL of the Deshader Library commands server",
                "default": "ws://localhost:8082"
              },
              "showDebugOutput": {
                "type": "boolean",
                "description": "Show debug output from the command listener",
                "default": false
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after first frame",
                "default": false
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "Deshader Launch",
            "type": "deshader",
            "request": "launch",
            "program": "${workspaceFolder}/${command:AskForProgramName}",
            "args": [],
            "cwd": "${workspaceFolder}",
            "env": {},
            "console": "integratedTerminal",
            "stopOnEntry": false,
            "showDebugOutput": false
          },
          {
            "name": "Deshader Attach",
            "type": "deshader",
            "request": "attach",
            "connection": "ws://localhost:8082",
            "showDebugOutput": false,
            "stopOnEntry": false
          }
        ],
        "configurationSnippets": [
          {
            "label": "Deshader Launch",
            "description": "Launch a program and inject Deshader Library into it",
            "body": {
              "type": "deshader",
              "request": "launch",
              "name": "Deshader Launch",
              "program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
              "args": [],
              "cwd": "${workspaceFolder}",
              "env": {},
              "console": "integratedTerminal",
              "showDebugOutput": false,
              "stopOnEntry": false
            }
          },
          {
            "label": "Deshader Attach",
            "description": "Attach to a running program with Deshader already injected",
            "body": {
              "type": "deshader",
              "request": "attach",
              "name": "Deshader Attach",
              "connection": "ws://localhost:8082",
              "showDebugOutput": false,
              "stopOnEntry": false
            }
          }
        ],
        "variables": {
          "AskForProgramName": "deshader.askForProgramName"
        }
      }
    ],
    "commands": [
      {
        "command": "deshader.connect",
        "title": "Deshader: Connect",
        "icon": "$(broadcast)",
        "category": "Deshader"
      },
      {
        "command": "deshader.disconnect",
        "title": "Deshader: Disconnect",
        "icon": "$(debug-disconnect)",
        "category": "Deshader"
      },
      {
        "command": "deshader.newTerminal",
        "category": "Deshader",
        "title": "Deshader: New Terminal",
        "icon": "$(terminal)"
      },
      {
        "command": "deshader.addWorkspace",
        "title": "Deshader: Add virtual shader workspace",
        "category": "Deshader",
        "icon": "$(file-directory)"
      },
      {
        "command": "deshader.pauseMode",
        "title": "Deshader: Select thread pause mode",
        "category": "Deshader",
        "icon": "$(debug-coverage)"
      },
      {
        "command": "deshader.selectThread",
        "title": "Deshader: Select shader thread",
        "category": "Deshader",
        "icon": "$(list-selection)"
      },
      {
        "command": "deshader.showInstrumented",
        "title": "Show instrumented code",
        "category": "Deshader",
        "icon": "$(circuit-board)"
      },
      {
        "command": "deshader.window",
        "title": "Deshader: Open virtual workspace as remote",
        "category": "Deshader",
        "icon": "$(window)"
      },
      {
        "command": "deshader.newWindow",
        "title": "Deshader: Open virtual workspace in new window",
        "category": "Deshader",
        "icon": "$(window)"
      }
    ],
    "menus": {
      "editor/title/context": [
        {
          "command": "deshader.showInstrumented",
          "group": "navigation",
          "when": "resourceLangId == glsl && debugType == deshader"
        }
      ],
      "editor/context": [
        {
          "command": "deshader.showInstrumented",
          "group": "navigation",
          "when": "editorLangId == glsl && debugType == deshader"
        }
      ],
      "explorer/context": [
        {
          "command": "deshader.showInstrumented",
          "group": "navigation",
          "when": "resourceLangId == glsl && !explorerResourceIsFolder && debugType == deshader"
        }
      ],
      "explorer/title": [
        {
          "command": "deshader.addWorkspace",
          "group": "navigation"
        }
      ],
      "statusBar/remoteIndicator": [
        {
          "command": "deshader.connect",
          "when": "remoteConnectionState == disconnected || !remoteConnectionState && !deshader.connected",
          "group": "remote_20_deshader_1general@1"
        },
        {
          "command": "deshader.disconnect",
          "when": "remoteName =~ /^deshader$/ && remoteConnectionState == connected || deshader.connected",
          "group": "remote_20_deshader_1general@2"
        },
        {
          "command": "deshader.window",
          "when": "remoteConnectionState == disconnected || !remoteConnectionState",
          "group": "remote_20_deshader_1general@3"
        },
        {
          "command": "deshader.newWindow",
          "when": "remoteConnectionState == disconnected || !remoteConnectionState",
          "group": "remote_20_deshader_1general@4"
        }
      ]
    },
    "resourceLabelFormatters": [
      {
        "scheme": "vscode-remote",
        "authority": "deshader*",
        "formatting": {
          "label": "deshader:/${path}",
          "separator": "/",
          "tildify": true,
          "stripPathStartingSeparator": true,
          "workspaceSuffix": "Deshader",
          "workspaceTooltip": "Deshader virtual shader workspace"
        }
      }
    ],
    "terminal": {
      "profiles": [
        {
          "id": "deshader.terminal",
          "title": "Deshader Terminal",
          "icon": "debug-console"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "explorer",
        "contents": "🔦 In order to use Deshader, connect to a running instance of the Deshader Library.\n[Connect](command:deshader.connect)\nTo learn more about how to use Deshader [read its docs](https://github.com/OSDVF/deshader/blob/main/guide/README.md).",
        "when": "!deshader.connected"
      },
      {
        "view": "explorer",
        "contents": "\n[Add shader workspace](command:deshader.addWorkspace)\n",
        "when": "deshader.connected"
      },
      {
        "view": "deshader",
        "contents": "Deshader workspaces can be added to an existing VSCode workspace, or opened as remote.\n[Add shader workspace](command:deshader.addWorkspace)\n[Open as remote](command:deshader.window)\n[Open in new window](command:deshader.newWindow)\n"
      }
    ],
    "views": {
      "remote": [
        {
          "id": "deshader",
          "name": "Deshader",
          "remoteName": "deshader"
        }
      ]
    },
    "configuration": {
      "title": "Deshader",
      "properties": {
        "deshader.path": {
          "type": "string",
          "description": "Path to the Deshader Library (system directories will be searched if empty; no effect in Deshader Editor)",
          "default": ""
        },
        "deshader.launcher": {
          "type": "string",
          "description": "Path to the Deshader Launcher (system directories will be searched if empty; no effect in Deshader Editor)",
          "default": ""
        },
        "deshader.openAfterConnect": {
          "type": "boolean",
          "description": "Open virtual shader workspace after connecting to the Deshader Library",
          "default": true
        },
        "deshader.defaultConsoleHost": {
          "type": "string",
          "markdownDescription": "Default console host for applications launched in `externalTerminal` mode",
          "default": "xterm"
        },
        "deshader.targetAliveCheck": {
          "type": "number",
          "description": "Time in milliseconds between checks if the target is still alive (Deshader Editor only)",
          "default": 1000
        },
        "deshader.communicator.retries": {
          "type": "number",
          "description": "Number of retries for the communication with the Deshader Library",
          "default": 3
        },
        "deshader.communicator.trace": {
          "type": "boolean",
          "description": "Trace the communication between Deshader Library and the extension",
          "default": false
        },
        "deshader.communicator.readyCheck": {
          "type": "number",
          "description": "Time in milliseconds between checks if the Deshader Library is ready",
          "default": 800
        }
      }
    },
    "icons": {
      "extension-deshader": {
        "description": "Deshader",
        "default": {
          "fontPath": "./icons.woff",
          "fontCharacter": "A"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "bun run compile-prod",
    "compile-dev": "bun build src/extension.ts --outdir dist --sourcemap=linked --external vscode --format cjs --target browser --drop=process --define \"process=undefined\"",
    "compile-prod": "bun build src/extension.ts --outdir dist --sourcemap=external --external vscode --format cjs --target browser --drop=process --minify --define \"process.env.NODE_DEBUG=undefined\" --define \"process=undefined\"",
    "dev": "bun run compile-dev --watch",
    "postinstall": "if [ ! -f vscode.proposed.resolvers.d.ts ]; then bunx download-cli -o . https://raw.githubusercontent.com/microsoft/vscode/refs/heads/main/src/vscode-dts/vscode.proposed.resolvers.d.ts; fi",
    "lint": "eslint .",
    "lintfix": "eslint . --fix"
  },
  "dependencies": {
    "@vscode/debugadapter": "^1.64.0",
    "await-notify": "^1.0.1",
    "path-browserify": "^1.0.1",
    "vscode-languageclient": "^9.0.1"
  },
  "devDependencies": {
    "@types/node": "^20.10.4",
    "@types/path-browserify": "^1.0.3",
    "@types/vscode": "^1.91.1",
    "@typescript-eslint/eslint-plugin": "^8.12.2",
    "@typescript-eslint/parser": "^8.12.2",
    "eslint": "^9.13.0",
    "ts-loader": "^9.4.4",
    "typescript": "^5.2.2",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  }
}